@model ThreadListViewModel

<link rel="stylesheet" href="~/css/IndexStyle.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/thread_table.css" asp-append-version="true"/>


<h3>Explore discussions</h3>
<div class="container">
    <input name="PostText" class="form-control" placeholder="Create Post" type="text" onclick="redirectToCreatePage()">
</div>

<!-- Dropdown for category filtering -->
<div class="container">
    <select id="categoryFilter" class="form-select">
        <option value="all">Show all Categories</option>
        <option value="General">General</option>
        <option value="Help">Help</option>
        <option value="Moderation">Moderation</option>
    </select>
</div>

<div class="container">
    <div id="postContainer" class="row">
        @foreach (var thread in Model.Threads.OrderByDescending(t => t.ThreadCreatedAt).Take(6))
        {
            <div class="post col-md-12">
                <a asp-controller="Thread" asp-action="Thread" asp-route-threadID="@thread.ThreadId">
                    <div>
                        <div> <p class="thread-information"> <b>@thread.UserCookie</b> posted in <b class="category">@thread.Category.CategoryName</b> on the <b>@thread.ThreadCreatedAt.ToString("yyyy-MM-dd HH:mm")</b></p></div>
                        <hr/>
                        <div><p class="title-thread"><b>@thread.ThreadTitle</b></p></div>
                        <div><p class="thread-text">@Html.Raw(thread.ThreadBody)</p></div> <!-- Displays first 75 characters of a the ThreadBody -->
                        <div><p class="comment-count">@thread.ThreadComments?.Count replies</p></div>
                    </div>
                </a>
                <p></p>
            </div>
        }
    </div>
</div>

<script>
    const categoryFilter = document.getElementById("categoryFilter");
    const postContainer = document.getElementById("postContainer");

    categoryFilter.addEventListener("change", filterPosts);

    function filterPosts() {
        const selectedCategory = categoryFilter.value;
        const posts = postContainer.querySelectorAll(".post");

        posts.forEach(post => {
            const category = post.querySelector(".category").textContent;
            if (selectedCategory === "all" || category === selectedCategory) {
                post.style.display = "block";
            } else {
                post.style.display = "none";
            }
        });
    }
    
    function redirectToCreatePage() {
        window.location.href = "/Thread/Create";
    }
</script>
